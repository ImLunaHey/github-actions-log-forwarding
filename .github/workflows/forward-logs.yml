name: Forward Logs

on: [push]

permissions:
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Setup bun
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # Test
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install deps
        run: bun install
      - name: Test
        run: bun run test
  forward_logs:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download workflow logs
        run: |
          mkdir logs
          # Get the job ID of the last job in the workflow run
          LAST_JOB_ID=$(curl -s -u "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" \
                        "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }}/jobs" | jq -r '.jobs[-1].id')
          echo "LAST_JOB_ID: $LAST_JOB_ID"

          LOG_URL="https://api.github.com/repos/${{ github.repository }}/actions/jobs/$LAST_JOB_ID/logs"
          echo "LOG_URL: $LOG_URL"
          curl -s -o logs/logs.txt -u "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" $LOG_URL
          cat logs/logs.txt

      - name: Create structured logs
        run: |
          # Parse and structure the logs as JSON objects
          while IFS= read -r line; do
            timestamp=$(echo "$line" | awk '{print $1}')
            content=$(echo "$line" | cut -d ' ' -f 3-)
            
            # Check if the log line contains a [command] tag
            if [[ "$content" =~ \[command\].* ]]; then
                type="command"
                command=$(echo "$content" | sed -E 's/\[command\]//')
                
                # Extract command arguments as an array
                IFS=' ' read -ra args <<< "$command"
                
                content=""
            else
                type=$(echo "$line" | awk '{print $2}')
                command=""
                args=()
            fi
            
            json="{\"timestamp\":\"$timestamp\",\"type\":\"$type\",\"command\":\"$command\",\"args\":$(printf '%s\n' "${args[@]}" | jq -R . | jq -s -c .),\"content\":\"$content\"}"
            echo "$json" >> structured_logs.json
            done < logs/logs.txt
          cat structured_logs.json

      - name: Send logs to Axiom
        env:
          API_TOKEN: xaat-09506dff-88e7-4b27-b21e-6344482ccb81
          DATASET_NAME: github-actions-forwarding
        run: |
          cat structured_logs.json | curl -X 'POST' 'https://api.axiom.co/v1/datasets/'$DATASET_NAME'/ingest' \
            -H 'Authorization: Bearer '$API_TOKEN \
            -H 'Content-Type: application/x-ndjson' \
            -d @-
